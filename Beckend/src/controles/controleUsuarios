const fakeUsers = [
  { id: 1, nome: "João", cpf: "11111111111", telefone: "11999999999", email: "joao@teste.com", entregador: false, senha: "1234" },
  { id: 2, nome: "Maria", cpf: "22222222222", telefone: "11888888888", email: "maria@teste.com", entregador: true, senha: "abcd" }
];

exports.getAllUsers = async (req, res, next) => {
  try {
    res.json({ success: true, data: fakeUsers });
  } catch (err) {
    next(err);
  }
};

exports.login = async (req, res, next) => {
  try {
    const { email, senha } = req.body;
    const user = fakeUsers.find(u => u.email === email && u.senha === senha);
    if (user) {
      res.json({ success: true, message: "Login bem-sucedido", user });
    } else {
      res.json({ success: false, message: "Usuário ou senha inválidos" });
    }
  } catch (err) {
    next(err);
  }
};

exports.signup = async (req, res, next) => {
  try {
    const novoUsuario = { id: fakeUsers.length + 1, ...req.body };
    fakeUsers.push(novoUsuario);
    res.json({ success: true, message: 'Usuário cadastrado com sucesso', user: novoUsuario });
  } catch (err) {
    next(err);
  }
};

exports.editarUsuario = async (req, res, next) => {
  try {
    const { id, nome, telefone, email } = req.body;
    const user = fakeUsers.find(u => u.id === parseInt(id));
    if (user) {
      user.nome = nome || user.nome;
      user.telefone = telefone || user.telefone;
      user.email = email || user.email;
      res.json({ success: true, message: 'Usuário atualizado com sucesso', user });
    } else {
      res.json({ success: false, message: 'Usuário não encontrado' });
    }
  } catch (err) {
    next(err);
  }
};

exports.deletarUsuario = async (req, res, next) => {
  try {
    const { id } = req.body;
    const index = fakeUsers.findIndex(u => u.id === parseInt(id));
    if (index !== -1) {
      fakeUsers.splice(index, 1);
      res.json({ success: true, message: 'Usuário deletado com sucesso' });
    } else {
      res.json({ success: false, message: 'Usuário não encontrado' });
    }
  } catch (err) {
    next(err);
  }
};
